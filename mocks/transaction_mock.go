// Code generated by MockGen. DO NOT EDIT.
// Source: ./store/transaction/transaction.go

// Package mocks is a generated GoMock package.
package mocks

import (
	model "Q2Bank/model"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTRansactionStore is a mock of Store interface.
type MockTRansactionStore struct {
	ctrl     *gomock.Controller
	recorder *MockTRansactionStoreMockRecorder
}

// MockTRansactionStoreMockRecorder is the mock recorder for MockTRansactionStore.
type MockTRansactionStoreMockRecorder struct {
	mock *MockTRansactionStore
}

// NewMockTRansactionStore creates a new mock instance.
func NewMockTRansactionStore(ctrl *gomock.Controller) *MockTRansactionStore {
	mock := &MockTRansactionStore{ctrl: ctrl}
	mock.recorder = &MockTRansactionStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTRansactionStore) EXPECT() *MockTRansactionStoreMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTRansactionStore) Create(ctx context.Context, transaction model.Transaction) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, transaction)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockTRansactionStoreMockRecorder) Create(ctx, transaction interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTRansactionStore)(nil).Create), ctx, transaction)
}

// ReadByID mocks base method.
func (m *MockTRansactionStore) ReadByID(ctx context.Context, id string) (*model.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadByID", ctx, id)
	ret0, _ := ret[0].(*model.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadByID indicates an expected call of ReadByID.
func (mr *MockTRansactionStoreMockRecorder) ReadByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadByID", reflect.TypeOf((*MockTRansactionStore)(nil).ReadByID), ctx, id)
}
